<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.kuhlins.maven</groupId>
    <artifactId>tk-maven-base</artifactId>
    <version>0.4-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Common project baseline and configurations with latest versions @ 2024-11-17.</description>

    <scm>
        <connection>scm:git:git://github.com/thomaskuh/tk-maven-base.git</connection>
        <developerConnection>scm:git:git@github.com:thomaskuh/tk-maven-base.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/thomaskuh/tk-maven-base</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>nexus.kuhlins.org</id>
            <url>https://nexus.kuhlins.org/repository/maven-public</url>
        </repository>
    </distributionManagement>

    <properties>
        <!-- We cant have timestamp so we use parsable ISO 8601 format. -->
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
        <version.log4j>2.24.1</version.log4j>
        <version.slf4j>2.0.16</version.slf4j>
        <version.junit>5.11.3</version.junit>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Logging - Prefer log4j2. -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <!-- Logging - But if there's slf4j somewhere: force version 2 and use adapter. -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j2-impl</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${version.junit}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${version.junit}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- Configure resource plugin to only filter the one file with build properties. -->
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>x-build.properties</include>
                    <include>x-build.txt</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>x-build.properties</exclude>
                    <exclude>x-build.txt</exclude>
                </excludes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <release>21</release>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.4.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.2</version>
                    <configuration>
                        <excludes>
                            <exclude>**/*IT.java</exclude>
                            <exclude>**/*Sample.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <tagNameFormat>release/@{project.version}</tagNameFormat>
                        <preparationGoals>clean verify</preparationGoals>
                        <goals>clean deploy</goals>
                        <!-- Builds with docker should use:
                        <preparationGoals>clean verify docker:build</preparationGoals>
                        <goals>clean deploy docker:build docker:push</goals>
                        -->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.45.1</version>
                </plugin>
                <!-- Common format not running automatically. Feel free to run manually:
                - mvn spotless:check
                - mvn spotless:apply
                -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>2.43.0</version>
                    <configuration>
                        <pom>
                            <sortPom>
                                <nrOfIndentSpace>4</nrOfIndentSpace>
                            </sortPom>
                        </pom>
                        <json>
                            <includes>
                                <include>src/**/*.json</include>
                            </includes>
                            <gson />
                        </json>
                        <java>
                            <palantirJavaFormat>
                                <version>2.50.0</version>
                                <style>PALANTIR</style>
                            </palantirJavaFormat>
                            <removeUnusedImports />
                            <formatAnnotations />
                        </java>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
